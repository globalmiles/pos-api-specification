#%RAML 1.0
title: Global Miles POS API
version: 2.0
baseUri: https://api.sandbox.globalmiles.com
baseUriParameters: {}
documentation:
- title: Global Miles POS API
  content: "By integrating Global Miles POS APIs, Merchants can offer to the Global Miles users  earn mile and shop with their miles in their in-stores.\n\nWork Flow:\nCommon to dos both for Earn/Pay with miles. \n\nWe will provide Client ID/ Secret Key.\nBefore using any endpoints of us, you need to authorize by using your Client ID / Client Secret to get access_token. \nDuring shopping cashier ask GlobalMiles user for GSM / FFP ID / Code or EMail and enter into POS. \nPOS software Post this info to Global Miles Server by using the endpoint GetCustomerInfo and get unique identifier in order to use at TransactionResult endpoint if you follow EarnMiles work Flow or use at  StartMilePayment endpoint if you follow use your Miles work flow. \n\nEarn Mile: \nAfter Getting Customer Info, Cashier will finalize the payment, as the payment done at POS post TransactionResult.\n\nPay with Miles:\nAfter Getting Customer Info, as all the items added to basket, Cashier ask for the payment method as the Global Miles selected as payment method, Pos software Post this info Global Miles Server by using the endpoint StartMilePayment.\n\nAn OTP code is send to the Customer mobile phone. The Customer/cashier enter this OTP into POS and this info Post to Global Miles server by the CompleteMilePayment endpoint.\n\nCancel Payment with Miles:\nBy using Get Mile Provision & CancelMilePayment endpoints  it allows to  list related sale on the POS and Cancel it ."
securitySchemes:
  auth:
    type: OAuth 2.0
    settings:
      authorizationUri: ''
      accessTokenUri: https://api.sandbox.globalmiles.com/oauth/token
      authorizationGrants:
      - client_credentials
      scopes: []
types:
  CompleteMilePaymentRequest:
    example:
      value:
        terminal_id: A11708020243
        otp: 3636
    displayName: CompleteMilePaymentRequest
    type: object
    properties:
      terminal_id:
        required: true
        displayName: terminal_id
        description: Terminal ID.
        type: string
      otp:
        required: true
        displayName: otp
        description: One time password that sends to customer phone.
        type: string
  StartMilePaymentResponse:
    example:
      value:
        return_code: 0
        return_desc: ''
        miles_payment_provision_id: 205
        otp_needed: True
    displayName: StartMilePaymentResponse
    type: object
    properties:
      return_code:
        required: true
        displayName: return_code
        description: 0  Success, 1 and bigger than 1 unsuccessful.
        type: integer
        format: int32
      return_desc:
        required: true
        displayName: return_desc
        description: if success return is empty. if unsuccessful it returns error message.
        type: string
      miles_payment_provision_id:
        required: true
        displayName: miles_payment_provision_id
        description: Provision ID for the payment.
        type: integer
        format: int32
      otp_needed:
        required: true
        displayName: otp_needed
        description: Is a one-time password required?
        type: boolean
  Invoice:
    example:
      value:
        invoice_type: 0
        invoice_number: 17
        invoice_date: 11.07.2018
    displayName: Invoice
    type: object
    properties:
      invoice_type:
        required: true
        displayName: invoice_type
        description: Type of the invoice.
        type: string
      invoice_number:
        required: true
        displayName: invoice_number
        description: Number of the invoice.
        type: string
      invoice_date:
        required: true
        displayName: invoice_date
        description: Date of the invoice.
        type: string
  Payment:
    example:
      value:
        pay_amount: 10
        payment_type: 100
        miles_payment_provision_id: 5
    displayName: Payment
    type: object
    properties:
      pay_amount:
        required: true
        displayName: pay_amount
        description: Amount of the payment.
        type: number
        format: double
      payment_type:
        required: true
        displayName: payment_type
        description: Type of the payment.
        type: string
      miles_payment_provision_id:
        required: false
        displayName: miles_payment_provision_id
        description: Provision ID for pay with miles.
        type: integer
        format: int32
  GetCustomerInfoResponse:
    example:
      value:
        return_code: 0
        return_desc: ''
        recognition_id: 197
        available_miles_as_amount: 3.5
        loyalty_discounted_total_amount: 9
        currency: USD
    displayName: GetCustomerInfoResponse
    type: object
    properties:
      return_code:
        required: true
        displayName: return_code
        description: 0  Success, 1 and bigger than 1 unsuccessful.
        type: integer
        format: int32
      return_desc:
        required: true
        displayName: return_desc
        description: if success return is empty. if unsuccessful it returns error message.
        type: string
      recognition_id:
        required: true
        displayName: recognition_id
        description: Session based user identification number.
        type: integer
        format: int32
      available_miles_as_amount:
        required: true
        displayName: available_miles_as_amount
        description: The available miles as an amount that the customer can use in this transaction which is calculated from customer's current miles.
        type: number
        format: double
      loyalty_discounted_total_amount:
        required: true
        displayName: loyalty_discounted_total_amount
        description: Loyalty discounted total amount.
        type: number
        format: double
      currency:
        required: true
        displayName: currency
        description: ISO-4217 3-letter currency code.
        type: string
  Discount:
    example:
      value:
        origin: 1
        type: 0
        value: 3
    displayName: Discount
    type: object
    properties:
      origin:
        required: true
        displayName: origin
        description: 'Origin of the discount. 1: Global Miles, 2: Other.'
        type: string
      type:
        required: true
        displayName: type
        description: 'Type of the discount. 0: amount based, 1: rate based.'
        type: string
      value:
        required: true
        displayName: value
        description: Value of the discount.
        type: number
        format: double
  CancelMilePaymentRequest:
    example:
      value:
        terminal_id: A11708020243
    displayName: CancelMilePaymentRequest
    type: object
    properties:
      terminal_id:
        required: true
        displayName: terminal_id
        description: Terminal ID.
        type: string
  OAuthResponse:
    example:
      value:
        access_token: '{{access_token}}'
        token_type: bearer
        created_at: 1496737098
    displayName: OAuthResponse
    description: Representing an OAuth response.
    type: object
    properties:
      access_token:
        required: true
        displayName: access_token
        description: An access token from the authorization server.
        type: string
      token_type:
        required: true
        displayName: token_type
        description: The type of token this is, typically just the string "bearer".
        type: string
      created_at:
        required: true
        displayName: created_at
        description: The time in unix time format when the access token was created.
        type: string
  OAuthRequest:
    example:
      value:
        client_id: b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df
        client_secret: 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
        grant_type: client_credentials
    displayName: OAuthRequest
    description: Representing an OAuth request.
    type: object
    properties:
      client_id:
        required: true
        displayName: client_id
        description: ID of the client which is provided by Global Miles.
        type: string
      client_secret:
        required: true
        displayName: client_secret
        description: Secret of the client which is provided by Global Miles.
        type: string
      grant_type:
        required: true
        displayName: grant_type
        description: 'Type of the OAuth flows. We support only one type of token: client_credentials'
        type: string
  MileProvision:
    example:
      value:
        miles_payment_provision_id: 5
        used_miles_as_amount: 12
        currency: USD
        date_time: 7/6/2017 12:06:41 PM
    displayName: MileProvision
    type: object
    properties:
      miles_payment_provision_id:
        required: true
        displayName: miles_payment_provision_id
        description: Provision ID
        type: integer
        format: int32
      used_miles_as_amount:
        required: true
        displayName: used_miles_as_amount
        description: Used amount
        type: number
        format: double
      currency:
        required: true
        displayName: currency
        description: ISO-4217 3-letter currency code.
        type: string
      date_time:
        required: true
        displayName: date_time
        description: Date time of the mile provision.
        type: string
  TransactionResultRequest:
    example:
      value:
        total_receipt_amount: 20
        total_vat_amount: 1.18
        currency: USD
        partner_id: 12
        branch_id: 17
        terminal_id: A11708020243
        receipt_number: 0007
        extra_number_1: 15
        extra_number_2: 03
        recognition_id: 197
        receipt_type: 1
        receipt_date_time: 110720181530
        invoice_info:
          invoice_type: 0
          invoice_number: 17
          invoice_date: 11.07.2018
        payments:
        - pay_amount: 10
          payment_type: 1
        - pay_amount: 10
          payment_type: 100
          miles_payment_provision_id: 5
        discounts:
        - origin: 1
          type: 0
          value: 3
        extra_data: ''
    displayName: TransactionResultRequest
    type: object
    properties:
      total_receipt_amount:
        required: true
        displayName: total_receipt_amount
        description: Total receipt amount.
        type: number
        format: double
      total_vat_amount:
        required: true
        displayName: total_vat_amount
        description: Total tax amount.
        type: number
        format: double
      currency:
        required: true
        displayName: currency
        description: ISO-4217 3-letter currency code.
        type: string
      partner_id:
        required: true
        displayName: partner_id
        description: Partner ID.
        type: integer
        format: int32
      branch_id:
        required: true
        displayName: branch_id
        description: Branch ID.
        type: integer
        format: int32
      terminal_id:
        required: true
        displayName: terminal_id
        description: Terminal ID.
        type: string
      receipt_number:
        required: true
        displayName: receipt_number
        description: Receipt number.
        type: string
      extra_number_1:
        required: true
        displayName: extra_number_1
        description: Extra number 1.
        type: string
      extra_number_2:
        required: true
        displayName: extra_number_2
        description: Extra number 2.
        type: string
      recognition_id:
        required: true
        displayName: recognition_id
        description: Session based identification number.
        type: integer
        format: int32
      receipt_type:
        required: true
        displayName: receipt_type
        description: Receipt type (Invoice , Food ..)
        type: string
      receipt_date_time:
        required: true
        displayName: receipt_date_time
        description: It should be DDMMYYYYHHMM formatted.
        type: string
      invoice_info:
        required: false
        displayName: invoice_info
        description: Invoice details.
        type: Invoice
      payments:
        required: false
        displayName: payments
        description: Payment details.
        type: array
        items:
          type: Payment
      discounts:
        required: false
        displayName: discounts
        description: Discount details.
        type: array
        items:
          type: Discount
      extra_data:
        required: false
        displayName: extra_data
        description: Extra data.
        type: string
  CancelMilePaymentResponse:
    example:
      value:
        return_code: 0
        return_desc: ''
    displayName: CancelMilePaymentResponse
    type: object
    properties:
      return_code:
        required: true
        displayName: return_code
        description: 0  Success, 1 and bigger than 1 unsuccessful.
        type: integer
        format: int32
      return_desc:
        required: true
        displayName: return_desc
        description: if success return is empty. if unsuccessful it returns error message
        type: string
  CompleteMilePaymentResponse:
    example:
      value:
        return_code: 0
        return_desc: ''
    displayName: CompleteMilePaymentResponse
    type: object
    properties:
      return_code:
        required: true
        displayName: return_code
        description: 0  Success, 1 and bigger than 1 unsuccessful.
        type: integer
        format: int32
      return_desc:
        required: true
        displayName: return_desc
        description: if success return is empty. if unsuccessful it returns error message.
        type: string
  StartMilePaymentRequest:
    example:
      value:
        total_receipt_amount: 10
        used_miles_as_amount: 3
        currency: USD
        recognition_id: 197
        terminal_id: A11708020243
    displayName: StartMilePaymentRequest
    type: object
    properties:
      total_receipt_amount:
        required: true
        displayName: total_receipt_amount
        description: Total receipt amount.
        type: number
        format: double
      used_miles_as_amount:
        required: true
        displayName: used_miles_as_amount
        description: Used amount that has been used in the shopping.
        type: number
        format: double
      currency:
        required: true
        displayName: currency
        description: ISO-4217 3-letter currency code.
        type: string
      recognition_id:
        required: true
        displayName: recognition_id
        description: Session based user identification number.
        type: integer
        format: int32
      terminal_id:
        required: true
        displayName: terminal_id
        description: Terminal ID.
        type: string
  GetMileProvisionsResponse:
    example:
      value:
        return_code: 0
        return_desc: ''
        payment_provisions:
        - miles_payment_provision_id: 5
          used_miles_as_amount: 12
          currency: USD
          date_time: 7/6/2017 12:06:41 PM
        - miles_payment_provision_id: 6
          used_miles_as_amount: 17
          currency: USD
          date_time: 7/6/2017 12:06:48 PM
    displayName: GetMileProvisionsResponse
    type: object
    properties:
      return_code:
        required: true
        displayName: return_code
        description: 0  Success, 1 and bigger than 1 unsuccessful.
        type: integer
        format: int32
      return_desc:
        required: true
        displayName: return_desc
        description: if success return is empty. if unsuccessful it returns error message.
        type: string
      payment_provisions:
        required: true
        displayName: payment_provisions
        description: A collection of the payments.
        type: array
        items:
          type: MileProvision
  GetTerminalInfoResponse:
    example:
      value:
        return_code: 0
        return_desc: ''
        terminal_id: A11708020243
        receipt_header: Earn Miles
        receipt_footer: Now join the world of Global Miles!
        partner_id: 12
        branch_id: 17
        merchant_id_mandatory: True
        default_currency: USD
    displayName: GetTerminalInfoResponse
    type: object
    properties:
      return_code:
        required: true
        displayName: return_code
        description: 0 Success, 1 and bigger than 1 unsuccessful.
        type: integer
        format: int32
      return_desc:
        required: true
        displayName: return_desc
        description: if success return is empty. if unsuccessful it returns error message.
        type: string
      terminal_id:
        required: true
        displayName: terminal_id
        description: Terminal ID.
        type: string
      receipt_header:
        required: true
        displayName: receipt_header
        description: Header text for the receipt.
        type: string
      receipt_footer:
        required: true
        displayName: receipt_footer
        description: Footer text for the receipt.
        type: string
      partner_id:
        required: true
        displayName: partner_id
        description: Partner ID.
        type: integer
        format: int32
      branch_id:
        required: true
        displayName: branch_id
        description: Branch ID.
        type: integer
        format: int32
      merchant_id_mandatory:
        required: true
        displayName: merchant_id_mandatory
        description: Indicates whether the merchant ID parameter is required in the Transaction Result request.
        type: boolean
      default_currency:
        required: true
        displayName: default_currency
        description: ISO-4217 3-letter default currency code for the partner.
        type: string
  TransactionResultResponse:
    example:
      value:
        return_code: 0
        return_desc: ''
        qr_data: I112042017114200000001000000JI2005368500030001001010100000001000e58de1f24e3f9e73772ad0b41f9c65f
        extra_info: ''
    displayName: TransactionResultResponse
    type: object
    properties:
      return_code:
        required: true
        displayName: return_code
        description: 0  Success, 1 and bigger than 1 unsuccessful.
        type: integer
        format: int32
      return_desc:
        required: true
        displayName: return_desc
        description: if success return is empty. if unsuccessful it returns error message.
        type: string
      qr_data:
        required: true
        displayName: qr_data
        description: Text data to be used for printing the receipt.
        type: string
      extra_info:
        required: true
        displayName: extra_info
        description: Extra information for generel usage.
        type: string
  ReceiptPictureRequest:
    example:
      value:
        terminal_id: A11708020243
        recognition_id: 200
        file_name: 200_15899263622_01.png
        picture: iVBORw0KGgoAAAANSUhEUgAAAFAAAABQCAYAAACOEfKtAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAABx0RVh0U29mdHdhcmUAQWRvYmUgRmlyZXdvcmtzIENTNui8sowAAA4icSUVORK5CYII=
    displayName: ReceiptPictureRequest
    type: object
    properties:
      terminal_id:
        required: true
        displayName: terminal_id
        description: Terminal ID.
        type: string
      recognition_id:
        required: true
        displayName: recognition_id
        description: Session based user identification number.
        type: integer
        format: int32
      file_name:
        required: true
        displayName: file_name
        description: File name of the picture.
        type: string
      picture:
        required: true
        displayName: picture
        description: Base64 encoded binary picture data.
        type: string
  ReceiptPictureResponse:
    example:
      value:
        return_code: 0
        return_desc: ''
    displayName: ReceiptPictureResponse
    type: object
    properties:
      return_code:
        required: true
        displayName: return_code
        description: 0  Success, 1 and bigger than 1 unsuccessful.
        type: string
      return_desc:
        required: true
        displayName: return_desc
        description: if success return is empty. if unsuccessful it returns error message.
        type: string
/oauth/token:
  post:
    displayName: Authentication
    description: 'An access token will allow you to make requests for the system. We support only one type of token: client_credentials'
    body:
      application/json:
        example:
          value:
            client_id: b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df
            client_secret: 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
            grant_type: client_credentials
        displayName: Body
        description: The body of the request.
        type: OAuthRequest
    responses:
      200:
        description: Success
        body:
          application/json:
            example:
              value:
                access_token: 4a703ba19309b6197670e0606574cbe003bad856003fa36d31bce9a01b6b114c
                token_type: bearer
                created_at: 1496737098
            displayName: response
            type: OAuthResponse
      400:
        description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
        body: {}
      401:
        description: Unauthorized - No valid API key provided.
        body: {}
      402:
        description: Request Failed - The parameters were valid but the request failed.
        body: {}
      404:
        description: Not Found - The requested resource doesn't exist.
        body: {}
      429:
        description: Too Many Requests - Too many requests hit the API too quickly.
        body: {}
      500:
        description: Server Error - Something went wrong.
        body: {}
/v2/pos:
  /payments:
    get:
      displayName: Get Mile Provisions
      description: |
        Before cancelling the payment with miles this endpoint is used to list the related sale.


        You can try this endpoint with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df

        and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
      securedBy:
      - auth
      queryParameters:
        read_code:
          required: true
          example:
            value: 5929000000
          displayName: read_code
          description: Customer Identification Method; GSM, FFP ID, CODE or EMAIL.
          type: string
        read_code_type:
          required: true
          example:
            value: 1
          displayName: read_code_type
          description: '1: GSM, 2: FFP ID, 3: CODE, 4: EMAIL'
          type: string
        terminal_id:
          required: true
          example:
            value: A11708020243
          displayName: terminal_id
          description: Terminal ID.
          type: string
      responses:
        200:
          description: Success
          body:
            application/json:
              example:
                value:
                  return_code: 0
                  return_desc: ''
                  payment_provisions:
                  - miles_payment_provision_id: 5
                    used_miles_as_amount: 12
                    currency: USD
                    date_time: 7/6/2017 12:06:41 PM
                  - miles_payment_provision_id: 6
                    used_miles_as_amount: 17
                    currency: USD
                    date_time: 7/6/2017 12:06:48 PM
              displayName: response
              type: GetMileProvisionsResponse
        400:
          description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
          body: {}
        401:
          description: Unauthorized - No valid API key provided.
          body: {}
        402:
          description: Request Failed - The parameters were valid but the request failed.
          body: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          body: {}
        429:
          description: Too Many Requests - Too many requests hit the API too quickly.
          body: {}
        500:
          description: Server Error - Something went wrong.
          body: {}
    post:
      displayName: Start Mile Payment
      description: |
        After getting customer info's and RecognitionID to start Payment with Miles Use this endpoint.

        After calling this endpoint successfully OTP code send to customer GSM number. This OTP must be used with Complete endpoint in order to complete payment.


        You can try this endpoint with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df

        and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
      body:
        application/json:
          example:
            value:
              total_receipt_amount: 10
              used_miles_as_amount: 3
              currency: USD
              recognition_id: 197
              terminal_id: A11708020243
          displayName: Body
          description: The body of the request.
          type: StartMilePaymentRequest
      securedBy:
      - auth
      responses:
        200:
          description: Success
          body:
            application/json:
              example:
                value:
                  return_code: 0
                  return_desc: ''
                  miles_payment_provision_id: 205
                  otp_needed: True
              displayName: response
              type: StartMilePaymentResponse
        400:
          description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
          body: {}
        401:
          description: Unauthorized - No valid API key provided.
          body: {}
        402:
          description: Request Failed - The parameters were valid but the request failed.
          body: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          body: {}
        429:
          description: Too Many Requests - Too many requests hit the API too quickly.
          body: {}
        500:
          description: Server Error - Something went wrong.
          body: {}
    /{miles_payment_provision_id}:
      uriParameters:
        miles_payment_provision_id:
          required: true
          example:
            value: 5
          displayName: miles_payment_provision_id
          description: Provision ID.
          type: integer
          format: int32
      put:
        displayName: Complete Mile Payment
        description: |
          In order to finalize payment with miles use this endpoint. Use the OTP number which is send to user GSM on the Request body.


          You can try this endpoint with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df

          and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
        body:
          application/json:
            example:
              value:
                terminal_id: A11708020243
                otp: 3636
            displayName: Body
            description: The body of the request.
            type: CompleteMilePaymentRequest
        securedBy:
        - auth
        responses:
          200:
            description: Success
            body:
              application/json:
                example:
                  value:
                    return_code: 0
                    return_desc: ''
                displayName: response
                type: CompleteMilePaymentResponse
          400:
            description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
            body: {}
          401:
            description: Unauthorized - No valid API key provided.
            body: {}
          402:
            description: Request Failed - The parameters were valid but the request failed.
            body: {}
          404:
            description: Not Found - The requested resource doesn't exist.
            body: {}
          429:
            description: Too Many Requests - Too many requests hit the API too quickly.
            body: {}
          500:
            description: Server Error - Something went wrong.
            body: {}
      delete:
        displayName: Cancel Mile Payment
        description: |
          In order to cancel payment with miles you can use this endpoint. It allows to cancel payment only related GSM and terminal ID numbers.


          You can try this endpoint with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df

          and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
        body:
          application/json:
            example:
              value:
                terminal_id: A11708020243
            displayName: Body
            description: The body of the request.
            type: CancelMilePaymentRequest
        securedBy:
        - auth
        responses:
          200:
            description: Success
            body:
              application/json:
                example:
                  value:
                    return_code: 0
                    return_desc: ''
                displayName: response
                type: CancelMilePaymentResponse
          400:
            description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
            body: {}
          401:
            description: Unauthorized - No valid API key provided.
            body: {}
          402:
            description: Request Failed - The parameters were valid but the request failed.
            body: {}
          404:
            description: Not Found - The requested resource doesn't exist.
            body: {}
          429:
            description: Too Many Requests - Too many requests hit the API too quickly.
            body: {}
          500:
            description: Server Error - Something went wrong.
            body: {}
  /transaction_result:
    post:
      displayName: Transaction Result
      description: |
        After getting customer info by Get Customer Info endpoint and finished the shopping procedure in POS terminal, use this endpoint to complete transaction.


        You can try this endpoint with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df

        and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
      body:
        application/json:
          example:
            value:
              total_receipt_amount: 20
              total_vat_amount: 1.18
              currency: USD
              partner_id: 12
              branch_id: 17
              terminal_id: A11708020243
              receipt_number: 0007
              extra_number_1: 15
              extra_number_2: 03
              recognition_id: 197
              receipt_type: 1
              receipt_date_time: 110720181530
              invoice_info:
                invoice_type: 0
                invoice_number: 17
                invoice_date: 11.07.2018
              payments:
              - pay_amount: 10
                payment_type: 1
              - pay_amount: 10
                payment_type: 100
                miles_payment_provision_id: 5
              discounts:
              - origin: 1
                type: 0
                value: 3
              extra_data: ''
          displayName: Body
          description: The body of the request.
          type: TransactionResultRequest
      securedBy:
      - auth
      responses:
        200:
          description: Success
          body:
            application/json:
              example:
                value:
                  return_code: 0
                  return_desc: ''
                  qr_data: I112042017114200000001000000JI2005368500030001001010100000001000e58de1f24e3f9e73772ad0b41f9c65f
                  extra_info: ''
              displayName: response
              type: TransactionResultResponse
        400:
          description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
          body: {}
        401:
          description: Unauthorized - No valid API key provided.
          body: {}
        402:
          description: Request Failed - The parameters were valid but the request failed.
          body: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          body: {}
        429:
          description: Too Many Requests - Too many requests hit the API too quickly.
          body: {}
        500:
          description: Server Error - Something went wrong.
          body: {}
  /terminal_info:
    get:
      displayName: Get Terminal Info
      description: |
        This endpoint will help you to get terminal settings in order to use internal operations.


        You can try this endpoint with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df

        and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
      securedBy:
      - auth
      queryParameters:
        terminal_id:
          required: true
          example:
            value: A11708020243
          displayName: terminal_id
          description: Terminal ID.
          type: string
      responses:
        200:
          description: Success
          body:
            application/json:
              example:
                value:
                  return_code: 0
                  return_desc: ''
                  terminal_id: A11708020243
                  receipt_header: Earn Miles
                  receipt_footer: Now join the world of Global Miles!
                  partner_id: 12
                  branch_id: 17
                  merchant_id_mandatory: True
                  default_currency: USD
              displayName: response
              type: GetTerminalInfoResponse
        400:
          description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
          body: {}
        401:
          description: Unauthorized - No valid API key provided.
          body: {}
        402:
          description: Request Failed - The parameters were valid but the request failed.
          body: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          body: {}
        429:
          description: Too Many Requests - Too many requests hit the API too quickly.
          body: {}
        500:
          description: Server Error - Something went wrong.
          body: {}
  /customer_info:
    get:
      displayName: Get Customer Info
      description: |
        This endpoint will help you to get customer's miles amount as a currency and unique identifier value. Unique identifier value must be used by Transaction Result endpint in order to complete shopping.


        You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df

        and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c

        You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df

        and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
      securedBy:
      - auth
      queryParameters:
        read_code:
          required: true
          example:
            value: 5929000000
          displayName: read_code
          description: Customer Identification Method; GSM, FFP ID, CODE or EMAIL
          type: string
        read_code_type:
          required: true
          example:
            value: 1
          displayName: read_code_type
          description: '1: GSM, 2: FFP ID, 3: CODE, 4: EMAIL'
          type: string
        total_amount:
          required: true
          example:
            value: 10.00
          displayName: total_amount
          description: Total receipt amount.
          type: number
          format: double
        total_vat_amount:
          required: true
          example:
            value: 0.18
          displayName: total_vat_amount
          description: Total tax value.
          type: number
          format: double
        currency:
          required: true
          example:
            value: USD
          displayName: currency
          description: ISO-4217 3-letter currency code.
          type: string
        partner_id:
          required: true
          example:
            value: 12
          displayName: partner_id
          description: Partner ID.
          type: integer
          format: int32
        branch_id:
          required: true
          example:
            value: 17
          displayName: branch_id
          description: Branch ID.
          type: integer
          format: int32
        terminal_id:
          required: true
          example:
            value: A11708020243
          displayName: terminal_id
          description: Terminal ID.
          type: string
      responses:
        200:
          description: Success
          body:
            application/json:
              example:
                value:
                  return_code: 0
                  return_desc: ''
                  recognition_id: 197
                  available_miles_as_amount: 3.5
                  loyalty_discounted_total_amount: 9
                  currency: USD
              displayName: response
              type: GetCustomerInfoResponse
        400:
          description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
          body: {}
        401:
          description: Unauthorized - No valid API key provided.
          body: {}
        402:
          description: Request Failed - The parameters were valid but the request failed.
          body: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          body: {}
        429:
          description: Too Many Requests - Too many requests hit the API too quickly.
          body: {}
        500:
          description: Server Error - Something went wrong.
          body: {}
  /receipt_pictures:
    post:
      displayName: Upload Receipt Pictures
      description: |
        This endpoint will help you to upload receipt pictures which is related with a recognition ID and a transaction result.


        You can try this endoint with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df

        and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c

        You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df

        and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
      body:
        application/json:
          example:
            value:
              terminal_id: A11708020243
              recognition_id: 200
              file_name: 200_15899263622_01.png
              picture: iVBORw0KGgoAAAANSUhEUgAAAFAAAABQCAYAAACOEfKtAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAABx0RVh0U29mdHdhcmUAQWRvYmUgRmlyZXdvcmtzIENTNui8sowAAA4icSUVORK5CYII=
          displayName: Body
          description: The body of the request.
          type: ReceiptPictureRequest
      securedBy:
      - auth
      responses:
        200:
          description: Success
          body:
            application/json:
              example:
                value:
                  return_code: 0
                  return_desc: ''
              displayName: response
              type: ReceiptPictureResponse
        400:
          description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
          body: {}
        401:
          description: Unauthorized - No valid API key provided.
          body: {}
        402:
          description: Request Failed - The parameters were valid but the request failed.
          body: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          body: {}
        429:
          description: Too Many Requests - Too many requests hit the API too quickly.
          body: {}
        500:
          description: Server Error - Something went wrong.
          body: {}
