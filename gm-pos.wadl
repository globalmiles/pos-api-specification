<?xml version="1.0" encoding="UTF-8"?>
<application xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://wadl.dev.java.net/2009/02" xmlns:tns="default/schemas">
  <doc title="Global Miles POS API" xml:lang="en">By integrating GlobalMiles POS APIs, Merchants can offer to the GlobalMiles users  earn mile and shop with their miles in their in-stores.

Work Flow:
Common to dos both for Earn/Pay with miles. 

We will provide Client ID/ Secret Key. Ask us Please.
Before using any APIS of us, you need to authorise by using your Client ID / Secret Key  to get access_token.  
During shopping cashier ask GlobalMiles user  for  GSM No or QR code and enter into POS. 
POS software Post this info to GlobalMiles Server by using the API  GetCustomerInfo and get uniq identifier in order to  use at TransactionResult API  if you follow EarnMiles work Flow or  use at  StartBonusPayment API if you follow Use your Miles work flow. 

Earn Mile: 
After Getting Customer Info, Cashier will finalise the payment, as the payment done at POS post TransactionResult .

Use Your Mile(Bonus):

After Getting Customer Info, As all the items added to basket, Cashier ask for the payment method as the Globalmiles selected as payment method, Pos software Post this info GlobalMiles Server by using the API  StartBonusPayment .

An OTP code is send to the Customer mobile phone. The Customer/cashier enter this OTP into POS and this info Post to Globalmiles server by the BonusComplete API.

Cancel Payment with Miles:
By using Get Bonus Provision &amp; CancelBonusPayment APIs  it allows to  list related sale on the POS and Cancel it .</doc>
  <grammars>
    <xs:schema xmlns:tns="default/schemas" targetNamespace="default/schemas" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="CompleteMilePaymentResponse" type="tns:CompleteMilePaymentResponse" />
      <xs:element name="CancelMilePaymentResponse" type="tns:CancelMilePaymentResponse" />
      <xs:element name="GetMileProvisionsRequest" type="tns:GetMileProvisionsRequest" />
      <xs:element name="GetBonusProvisionsResponse" type="tns:GetBonusProvisionsResponse" />
      <xs:element name="MileProvision" type="tns:MileProvision" />
      <xs:element name="OAuthRequest" type="tns:OAuthRequest" />
      <xs:element name="OAuthResponse" type="tns:OAuthResponse" />
      <xs:element name="TransactionResultRequest" type="tns:TransactionResultRequest" />
      <xs:element name="StartMilePaymentRequest" type="tns:StartMilePaymentRequest" />
      <xs:element name="CancelMilePaymentRequest" type="tns:CancelMilePaymentRequest" />
      <xs:element name="GetCustomerInfoResponse" type="tns:GetCustomerInfoResponse" />
      <xs:element name="GetCustomerInfoRequest" type="tns:GetCustomerInfoRequest" />
      <xs:element name="Discount" type="tns:Discount" />
      <xs:element name="Payment" type="tns:Payment" />
      <xs:element name="Invoice" type="tns:Invoice" />
      <xs:element name="TransactionResultResponse" type="tns:TransactionResultResponse" />
      <xs:element name="StartMilePaymentResponse" type="tns:StartMilePaymentResponse" />
      <xs:element name="CompleteMilePaymentRequest" type="tns:CompleteMilePaymentRequest" />
      <xs:complexType name="CompleteMilePaymentResponse">
        <xs:sequence>
          <xs:element minOccurs="1" name="returnCode">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>0  Success, 1 and bigger than 1 unsuccessful</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="returnDesc">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>if success return is empty. if unsuccessful it returns error message</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CancelMilePaymentResponse">
        <xs:sequence>
          <xs:element minOccurs="1" name="returnCode">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>0  Success, 1 and bigger than 1 unsuccessful</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="returnDesc">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>if success return is empty. if unsuccessful it returns error message</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GetMileProvisionsRequest">
        <xs:sequence>
          <xs:element minOccurs="1" name="readCode">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Customer Identification Method ; GSM NO, Customer Unique ID or CODE</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="readCodeType">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>1: GSM NO, 2: Customer unique identifier, 3: CODE</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="OKCSicilNo">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Terminal code.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GetBonusProvisionsResponse">
        <xs:sequence>
          <xs:element minOccurs="1" name="returnCode">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>0  Success, 1 and bigger than 1 unsuccessful</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="returnDesc">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>if success return is empty. if unsuccessful it returns error message</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="bonusProvisions" type="tns:MileProvision" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MileProvision">
        <xs:sequence>
          <xs:element minOccurs="1" name="bonusPaymentProvisionId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Provision ID</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="usedBonusAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Used Bonus Amount</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="dateTime">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Date/time</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OAuthRequest">
        <xs:annotation>
          <xs:documentation>Representing an OAuth request.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="client_id">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>ID of the client which is provided by Global Miles.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="client_secret">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Secret of the client which is provided by Global Miles.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="grant_type">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Type of the OAuth flows. We support only one type of token: client_credentials</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OAuthResponse">
        <xs:annotation>
          <xs:documentation>Representing an OAuth response.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="1" name="access_token">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>An access token from the authorization server.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="token_type">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The type of token this is, typically just the string "bearer".</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="created_at">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The time in unix time format when the access token was created.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TransactionResultRequest">
        <xs:sequence>
          <xs:element minOccurs="1" name="totalReceiptAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Total Receipt Amount  ex:12.35 TL == 1235</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="totalVATAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Total VAT Amount  ex: 0.85 TL == 85</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="OKCSicilNo">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Terminal code.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="ReceiptNo">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>ReceiptNo</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="Zno">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Z no</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="recognitionId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Session based Identification Number .</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="EkuNo">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Eku no (Electronic Journal)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="ReceiptType">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Receipt Type (Invoice , Food ..)</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="ReceiptDateTime">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>It should be  GGAAYYYYSSDD formatted.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="InvoiceInfo" type="tns:Invoice">
            <xs:annotation>
              <xs:documentation>Invoice detail info</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="Payments" type="tns:Payment">
            <xs:annotation>
              <xs:documentation>Payment Detail Block</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="1" maxOccurs="unbounded" name="Discounts" type="tns:Discount" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="StartMilePaymentRequest">
        <xs:sequence>
          <xs:element minOccurs="1" name="totalReceiptAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Total Receipt Amount  ex:12.35 TL == 1235</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="usedBonusAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Used Amount that has been used in the shopping  ex:0.85 TL == 85</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="recognitionId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Session based user identification number</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="OKCSicilNo">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Terminal code.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CancelMilePaymentRequest">
        <xs:sequence>
          <xs:element minOccurs="1" name="bonusPaymentProvisionId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Provision ID</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="OKCSicilNo">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Terminal code.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GetCustomerInfoResponse">
        <xs:sequence>
          <xs:element minOccurs="1" name="returnCode">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>0  Success, 1 and bigger than 1 unsuccessful</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="returnDesc">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>if success return is empty. if unsuccessful it returns error message</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="recognitionId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Session based user identification number</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="availablePoint">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>The available points that the customer can use in this transaction is in USD which is calculated from customer's current miles. EX: 12.56 USD == 1256</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="loyaltyDiscountedPrice">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Loyalty discounted price ex: 90.50 USD == 9050</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GetCustomerInfoRequest">
        <xs:sequence>
          <xs:element minOccurs="1" name="readCode">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Customer Identification Method ; GSM NO, Customer Unique ID or CODE</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="readCodeType">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>1: GSM NO, 2: Customer unique identifier, 3: CODE</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="totalAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Total receipt amount.  ex:12.34 USD == 1234</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="totalVATAmount">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Total Tax Value. EX:1.34 USD == 134</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="OKCSicilNo">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Terminal code.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Discount">
        <xs:sequence>
          <xs:element minOccurs="1" name="orijin">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="type">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="value">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Payment">
        <xs:sequence>
          <xs:element minOccurs="1" name="payAmount">
            <xs:simpleType>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="paymentType">
            <xs:simpleType>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Invoice">
        <xs:sequence>
          <xs:element minOccurs="1" name="invoiceType">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="invoiceNo">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="invoiceDate">
            <xs:simpleType>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TransactionResultResponse">
        <xs:sequence>
          <xs:element minOccurs="1" name="returnCode">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>0  Success, 1 and bigger than 1 unsuccessful</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="returnDesc">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>if success return is empty. if unsuccessful it returns error message</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="StartMilePaymentResponse">
        <xs:sequence>
          <xs:element minOccurs="1" name="returnCode">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>0  Success, 1 and bigger than 1 unsuccessful</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:integer" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="returnDesc">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>if success return is empty. if unsuccessful it returns error message</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="bonusPaymentProvisionId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Provision ID for the payment</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="OTPNeeded" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Is a one-time password required?</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CompleteMilePaymentRequest">
        <xs:sequence>
          <xs:element minOccurs="1" name="bonusPaymentProvisionId">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Provision ID</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="OKCSicilNo">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>Terminal code.</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="1" name="OTP">
            <xs:simpleType>
              <xs:annotation>
                <xs:documentation>One time password that sends to customer phone</xs:documentation>
              </xs:annotation>
              <xs:restriction base="xs:string" />
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </grammars>
  <resources base="default">
    <resource id="_v1posTransactionResult" path="/v1/pos/TransactionResult">
      <method id="TransactionResult" name="POST">
        <doc title="Transaction Result" xml:lang="en">After getting customer info by Get Customer Info endpoint and finished the shopping procedure in POS terminal, use this endpoint to complete transaction.

You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is 552698b91cae424b9b3ddee14eea6faf564f1b5fb7764854b73b2763e0e68c66
and OAuthClientSecret is d0a8b00a3d754ea5a013465bcc23f6efa89e9dfb080a4f4eb460e3306653d92b</doc>
        <request>
          <representation element="tns:TransactionResultRequest" mediaType="application/json" />
        </request>
        <response status="200">
          <representation element="tns:TransactionResultResponse" mediaType="application/json" />
        </response>
        <response status="400">
          <doc title="400" xml:lang="en">Bad Request	- The request was unacceptable, often due to missing a required parameter.</doc>
        </response>
        <response status="401">
          <doc title="401" xml:lang="en">Unauthorized - No valid API key provided.</doc>
        </response>
        <response status="402">
          <doc title="402" xml:lang="en">Request Failed - The parameters were valid but the request failed.</doc>
        </response>
        <response status="404">
          <doc title="404" xml:lang="en">Not Found - The requested resource doesn't exist.</doc>
        </response>
        <response status="429">
          <doc title="429" xml:lang="en">Too Many Requests - Too many requests hit the API too quickly.</doc>
        </response>
        <response status="500">
          <doc title="500" xml:lang="en">Server Error - Something went wrong.</doc>
        </response>
      </method>
    </resource>
    <resource id="_oauthtoken" path="/oauth/token">
      <method id="Authentication" name="POST">
        <doc title="Authentication" xml:lang="en">An access token will allow you to make requests for the system. We support only one type of token: client_credentials</doc>
        <request>
          <representation element="tns:OAuthRequest" mediaType="application/json" />
        </request>
        <response status="200">
          <representation element="tns:OAuthResponse" mediaType="application/json" />
        </response>
        <response status="400">
          <doc title="400" xml:lang="en">Bad Request	- The request was unacceptable, often due to missing a required parameter.</doc>
        </response>
        <response status="401">
          <doc title="401" xml:lang="en">Unauthorized - No valid API key provided.</doc>
        </response>
        <response status="402">
          <doc title="402" xml:lang="en">Request Failed - The parameters were valid but the request failed.</doc>
        </response>
        <response status="404">
          <doc title="404" xml:lang="en">Not Found - The requested resource doesn't exist.</doc>
        </response>
        <response status="429">
          <doc title="429" xml:lang="en">Too Many Requests - Too many requests hit the API too quickly.</doc>
        </response>
        <response status="500">
          <doc title="500" xml:lang="en">Server Error - Something went wrong.</doc>
        </response>
      </method>
    </resource>
    <resource id="_v1posGetCustomerInfo" path="/v1/pos/GetCustomerInfo">
      <method id="GetCustomerInfo" name="POST">
        <doc title="Get Customer Info" xml:lang="en">This API will help you to get customer's mil quantity and unique identifier value. Unique identifier value must be used by Transaction Result API in order to complete shopping.

You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is 552698b91cae424b9b3ddee14eea6faf564f1b5fb7764854b73b2763e0e68c66
and OAuthClientSecret is d0a8b00a3d754ea5a013465bcc23f6efa89e9dfb080a4f4eb460e3306653d92b</doc>
        <request>
          <representation element="tns:GetCustomerInfoRequest" mediaType="application/json" />
        </request>
        <response status="200">
          <representation element="tns:GetCustomerInfoResponse" mediaType="application/json" />
        </response>
        <response status="400">
          <doc title="400" xml:lang="en">Bad Request	- The request was unacceptable, often due to missing a required parameter.</doc>
        </response>
        <response status="401">
          <doc title="401" xml:lang="en">Unauthorized - No valid API key provided.</doc>
        </response>
        <response status="402">
          <doc title="402" xml:lang="en">Request Failed - The parameters were valid but the request failed.</doc>
        </response>
        <response status="404">
          <doc title="404" xml:lang="en">Not Found - The requested resource doesn't exist.</doc>
        </response>
        <response status="429">
          <doc title="429" xml:lang="en">Too Many Requests - Too many requests hit the API too quickly.</doc>
        </response>
        <response status="500">
          <doc title="500" xml:lang="en">Server Error - Something went wrong.</doc>
        </response>
      </method>
    </resource>
    <resource id="_v1posStartBonusPayment" path="/v1/pos/StartBonusPayment">
      <method id="StartMilePayment" name="POST">
        <doc title="Start Mile Payment" xml:lang="en">After getting customer info's and RecognitionID to start Payment with Miles Use this API.
After calling this API successfully OTP code send to customer GSM number. This OTP must be used with Complete API in order to complete sale.

You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is 552698b91cae424b9b3ddee14eea6faf564f1b5fb7764854b73b2763e0e68c66
and OAuthClientSecret is d0a8b00a3d754ea5a013465bcc23f6efa89e9dfb080a4f4eb460e3306653d92b</doc>
        <request>
          <representation element="tns:StartMilePaymentRequest" mediaType="application/json" />
        </request>
        <response status="200">
          <representation element="tns:StartMilePaymentResponse" mediaType="application/json" />
        </response>
        <response status="400">
          <doc title="400" xml:lang="en">Bad Request	- The request was unacceptable, often due to missing a required parameter.</doc>
        </response>
        <response status="401">
          <doc title="401" xml:lang="en">Unauthorized - No valid API key provided.</doc>
        </response>
        <response status="402">
          <doc title="402" xml:lang="en">Request Failed - The parameters were valid but the request failed.</doc>
        </response>
        <response status="404">
          <doc title="404" xml:lang="en">Not Found - The requested resource doesn't exist.</doc>
        </response>
        <response status="429">
          <doc title="429" xml:lang="en">Too Many Requests - Too many requests hit the API too quickly.</doc>
        </response>
        <response status="500">
          <doc title="500" xml:lang="en">Server Error - Something went wrong.</doc>
        </response>
      </method>
    </resource>
    <resource id="_v1posCompleteBonusPayment" path="/v1/pos/CompleteBonusPayment">
      <method id="CompleteMilePayment" name="POST">
        <doc title="Complete Mile Payment" xml:lang="en">In order to finalize payment with Miles use this API. Use the OTP number  which is send to user GSM on the Request body.

You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is 552698b91cae424b9b3ddee14eea6faf564f1b5fb7764854b73b2763e0e68c66
and OAuthClientSecret is d0a8b00a3d754ea5a013465bcc23f6efa89e9dfb080a4f4eb460e3306653d92b</doc>
        <request>
          <representation element="tns:CompleteMilePaymentRequest" mediaType="application/json" />
        </request>
        <response status="200">
          <representation element="tns:CompleteMilePaymentResponse" mediaType="application/json" />
        </response>
        <response status="400">
          <doc title="400" xml:lang="en">Bad Request	- The request was unacceptable, often due to missing a required parameter.</doc>
        </response>
        <response status="401">
          <doc title="401" xml:lang="en">Unauthorized - No valid API key provided.</doc>
        </response>
        <response status="402">
          <doc title="402" xml:lang="en">Request Failed - The parameters were valid but the request failed.</doc>
        </response>
        <response status="404">
          <doc title="404" xml:lang="en">Not Found - The requested resource doesn't exist.</doc>
        </response>
        <response status="429">
          <doc title="429" xml:lang="en">Too Many Requests - Too many requests hit the API too quickly.</doc>
        </response>
        <response status="500">
          <doc title="500" xml:lang="en">Server Error - Something went wrong.</doc>
        </response>
      </method>
    </resource>
    <resource id="_v1posCancelBonusPayment" path="/v1/pos/CancelBonusPayment">
      <method id="CancelMilePayment" name="POST">
        <doc title="Cancel Mile Payment" xml:lang="en">In order to cancel payment with miles you can use this API. It allows to cancel payment only related GSM and terminal ID numbers.

You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is 552698b91cae424b9b3ddee14eea6faf564f1b5fb7764854b73b2763e0e68c66
and OAuthClientSecret is d0a8b00a3d754ea5a013465bcc23f6efa89e9dfb080a4f4eb460e3306653d92b</doc>
        <request>
          <representation element="tns:CancelMilePaymentRequest" mediaType="application/json" />
        </request>
        <response status="200">
          <representation element="tns:CancelMilePaymentResponse" mediaType="application/json" />
        </response>
        <response status="400">
          <doc title="400" xml:lang="en">Bad Request	- The request was unacceptable, often due to missing a required parameter.</doc>
        </response>
        <response status="401">
          <doc title="401" xml:lang="en">Unauthorized - No valid API key provided.</doc>
        </response>
        <response status="402">
          <doc title="402" xml:lang="en">Request Failed - The parameters were valid but the request failed.</doc>
        </response>
        <response status="404">
          <doc title="404" xml:lang="en">Not Found - The requested resource doesn't exist.</doc>
        </response>
        <response status="429">
          <doc title="429" xml:lang="en">Too Many Requests - Too many requests hit the API too quickly.</doc>
        </response>
        <response status="500">
          <doc title="500" xml:lang="en">Server Error - Something went wrong.</doc>
        </response>
      </method>
    </resource>
    <resource id="_v1posGetBonusProvisions" path="/v1/pos/GetBonusProvisions">
      <method id="GetMileProvisions" name="POST">
        <doc title="Get Mile Provisions" xml:lang="en">Before cancelling the payment with Miles this API is used to list the related sale.

You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is 552698b91cae424b9b3ddee14eea6faf564f1b5fb7764854b73b2763e0e68c66
and OAuthClientSecret is d0a8b00a3d754ea5a013465bcc23f6efa89e9dfb080a4f4eb460e3306653d92b</doc>
        <request>
          <representation element="tns:GetMileProvisionsRequest" mediaType="application/json" />
        </request>
        <response status="200">
          <representation element="tns:GetBonusProvisionsResponse" mediaType="application/json" />
        </response>
        <response status="400">
          <doc title="400" xml:lang="en">Bad Request	- The request was unacceptable, often due to missing a required parameter.</doc>
        </response>
        <response status="401">
          <doc title="401" xml:lang="en">Unauthorized - No valid API key provided.</doc>
        </response>
        <response status="402">
          <doc title="402" xml:lang="en">Request Failed - The parameters were valid but the request failed.</doc>
        </response>
        <response status="404">
          <doc title="404" xml:lang="en">Not Found - The requested resource doesn't exist.</doc>
        </response>
        <response status="429">
          <doc title="429" xml:lang="en">Too Many Requests - Too many requests hit the API too quickly.</doc>
        </response>
        <response status="500">
          <doc title="500" xml:lang="en">Server Error - Something went wrong.</doc>
        </response>
      </method>
    </resource>
  </resources>
</application>